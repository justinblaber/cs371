# AUTOGENERATED! DO NOT EDIT! File to edit: module10.ipynb (unless otherwise specified).

__all__ = ['sed_slow', 'sed_fast']

# Cell
import numpy as np
import matplotlib.pyplot as plt

from .utils import *

# Cell
def sed_slow(s1, s2):
    if   len(s1) == 0: return len(s2) # Just add characters to s1 to match s2
    elif len(s2) == 0: return len(s1) # Just add characters to s2 to match s1
    else:                             # Both strings are non-empty
        return min([
            sed_slow(s1[:-1], s2) + 1,                          # Delete char from s1
            sed_slow(s1, s2[:-1]) + 1,                          # Delete char from s2
            sed_slow(s1[:-1], s2[:-1]) + int(s1[-1] != s2[-1]), # Char either matches or is swapped
        ])

# Cell
def sed_fast(s1, s2, memory={}):
    if frozenset([s1, s2]) in memory: return memory[frozenset([s1, s2])]

    cost = None
    if   len(s1) == 0: cost = len(s2) # Just add characters to s1 to match s2
    elif len(s2) == 0: cost = len(s1) # Just add characters to s2 to match s1
    else:                             # Both strings are non-empty
        cost = min([
            sed_fast(s1[:-1], s2, memory) + 1,                          # Delete char from s1
            sed_fast(s1, s2[:-1], memory) + 1,                          # Delete char from s2
            sed_fast(s1[:-1], s2[:-1], memory) + int(s1[-1] != s2[-1]), # Char either matches or is swapped
        ])

    memory[frozenset([s1, s2])] = cost
    return cost